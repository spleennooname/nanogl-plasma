{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 16603d31ec5da9d5e6d6","webpack:///./node_modules/nanogl/bufferutils.js","webpack:///./src/main.js","webpack:///./src/styles.scss?a32d","webpack:///./src/styles.scss","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/nanogl/program.js","webpack:///./node_modules/nanogl/arraybuffer.js","webpack:///./node_modules/nanogl/indexbuffer.js","webpack:///./node_modules/nanogl/texture.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/src/gl-matrix/common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getComponentSize","type","Drawable","proto","drawPoints","count","offset","this","draw","drawLines","drawLineLoop","drawLineStrip","drawTriangles","drawTriangleStrip","drawTriangleFan","__webpack_exports__","done","stream","initGL","initProgram","initArrayBuffer","initIndexBuffer","initTexture","then","window","performance","now","requestAnimationFrame","render","fail","canvas","document","querySelector","gl","getContext","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","program","Program","compile","vertexCode","fragmentCode","data","Float32Array","arrayBuffer","ArrayBuffer","attrib","FLOAT","Uint16Array","indexBuffer","IndexBuffer","video","createElement","srcObject","loop","muted","play","oncanplay","texture","Texture","pixelStorei","UNPACK_FLIP_Y_WEBGL","setFilter","clamp","t","delta","fps","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fromImage","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","id","use","uTexture","projectionMatrix","mat4","create","modelViewMatrix","uProjectionMatrix","uModelViewMatrix","attribPointer","bind","value","__WEBPACK_IMPORTED_MODULE_0__styles_scss__","constraints","audio","width","min","max","height","frameRate","ideal","navigator","getUserMedia","mediaDevices","catch","content","locals","push","cssWithMappingToString","item","useSourceMap","cssMapping","btoa","sourceMapping","toComment","concat","sources","map","source","sourceRoot","join","sourceMap","unescape","encodeURIComponent","JSON","stringify","list","toString","mediaQuery","alreadyImportedModules","length","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","createStyleElement","styleElement","head","appendChild","obj","update","remove","ssrIdKey","isProduction","noop","parentNode","removeChild","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","css","media","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","options","ssrId","firstChild","hasDocument","DEBUG","Error","listToStyles","getElementsByTagName","test","userAgent","toLowerCase","parentId","_isProduction","_options","newList","mayRemove","textStore","replacement","filter","Boolean","newStyles","part","vert","frag","defs","createProgram","vShader","createShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","dyns","ready","attachShader","_uid","_UID","_cuid","undefined","warn","str","console","appendLine","__pads","String","formatCode","shader","split","compileShader","code","shaderSource","debug","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformSetFunctionName","USetFMap","getUniformSetter","location","context","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getMatrixSetFunction","SAMPLER_2D","SAMPLER_CUBE","getSamplerSetFunction","getUniformSetFunction","fname","arguments","apply","Array","transpose","unit","texIndex","uniform1i","getUniformBufferSetFunction","ublockIndex","WebGLBuffer","uniformBlockBinding","bindBufferBase","UNIFORM_BUFFER","getAttribAccess","_grabParameters","useProgram","prefix","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","pop","dispose","deleteProgram","deleteShader","prg","numUniforms","ACTIVE_UNIFORMS","uniformIndex","uniform","getActiveUniform","uName","indexOf","substring","uLocation","getUniformLocation","getError","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribName","getActiveAttrib","aLocation","getAttribLocation","ACTIVE_UNIFORM_BLOCKS","numBlocks","blockIndex","blockName","getActiveUniformBlockName","usage","STATIC_DRAW","buffer","createBuffer","attribs","stride","byteLength","BufferUtils","TGT","bindBuffer","size","normalize","_computeLength","array","bufferData","subData","bufferSubData","enableVertexAttribArray","vertexAttribPointer","mode","drawArrays","deleteBuffer","typeSize","setType","UNSIGNED_SHORT","drawElements","getFilter","smooth","mipmap","miplinear","format","internal","createTexture","setFormat","T2D","RGB","UNSIGNED_BYTE","img","texImage2D","fromData","deleteTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","repeat","wrap","REPEAT","CLAMP_TO_EDGE","mirror","MIRRORED_REPEAT","TEXTURE_WRAP_S","TEXTURE_WRAP_T","glMatrix","out","ARRAY_TYPE","clone","a","copy","identity","a01","a02","a03","a12","a13","a23","invert","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","adjoint","determinant","multiply","b","b0","b1","b2","b3","mul","translate","v","x","y","z","scale","rotate","rad","axis","b12","b20","b21","b22","len","Math","sqrt","abs","EPSILON","sin","cos","rotateX","rotateY","rotateZ","fromTranslation","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","q","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","ox","oy","oz","fromQuat","yx","zx","zy","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspective","fovy","aspect","f","tan","perspectiveFromFieldOfView","fov","upTan","upDegrees","PI","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","ortho","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","frob","pow","RANDOM","random","setMatrixArrayType","GLMAT_ARRAY_TYPE","degree","toRadian"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\n  getComponentSize : function( type ){\n    switch( type ){\n      case 0x1400 : //gl.BYTE:\n      case 0x1401 : //gl.UNSIGNED_BYTE:\n        return 1;\n      case 0x1402 : //gl.SHORT:\n      case 0x1403 : //gl.UNSIGNED_SHORT:\n        return 2;\n      case 0x1404 : //gl.INT:\n      case 0x1405 : //gl.UNSIGNED_INT:\n      case 0x1406 : //gl.FLOAT:\n        return 4;\n      default :\n        return 0;\n    }\n  },\n\n  Drawable: function( proto ){\n    proto.drawPoints         = function(count, offset){ this.draw( 0 /* POINTS         */ , count, offset ); };\n    proto.drawLines          = function(count, offset){ this.draw( 1 /* LINES          */ , count, offset ); };\n    proto.drawLineLoop       = function(count, offset){ this.draw( 2 /* LINE_LOOP      */ , count, offset ); };\n    proto.drawLineStrip      = function(count, offset){ this.draw( 3 /* LINE_STRIP     */ , count, offset ); };\n    proto.drawTriangles      = function(count, offset){ this.draw( 4 /* TRIANGLES      */ , count, offset ); };\n    proto.drawTriangleStrip  = function(count, offset){ this.draw( 5 /* TRIANGLE_STRIP */ , count, offset ); };\n    proto.drawTriangleFan    = function(count, offset){ this.draw( 6 /* TRIANGLE_FAN   */ , count, offset ); };\n  }\n\n};\n\n\n/**\n * Interface for buffer that can be drawn.\n *\n * @interface Drawable\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.POINTS, offset, count )\n * @function\n * @name Drawable#drawPoints\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINE_STRIP, offset, count )\n * @function\n * @name Drawable#drawLineStrip\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINE_LOOP, offset, count )\n * @function\n * @name Drawable#drawLineLoop\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINES, offset, count )\n * @function\n * @name Drawable#drawLines\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLE_STRIP, offset, count )\n * @function\n * @name Drawable#drawTriangleStrip\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLE_FAN, offset, count )\n * @function\n * @name Drawable#drawTriangleFan\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLES, offset, count )\n * @function\n * @name Drawable#drawTriangles\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__styles_scss__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__styles_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__styles_scss__);\n\n\nvar Program = __webpack_require__(7);\nvar ArrayBuffer = __webpack_require__(8);\nvar IndexBuffer = __webpack_require__(9);\nvar Texture = __webpack_require__(10);\n\nvar mat4 = __webpack_require__(11);\n\nvar constraints = {\n    audio: false,\n    video: {\n        width: { min: 640, max: 1920 },\n        height: { min: 480, max: 1080 },\n        frameRate: { ideal: 50, max: 60 }\n    }\n};\n\nvar vertexCode = '\\n    attribute vec3 position;\\n    attribute vec2 uv;\\n    uniform mat4 uProjectionMatrix;\\n    uniform mat4 uModelViewMatrix;\\n    varying vec2 vUv;\\n    void main() {\\n        vUv = uv;\\n        gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(position, 1.0);\\n    }\\n';\n\nvar fragmentCode = '\\n\\n    uniform sampler2D uTexture;\\n    uniform lowp vec2 uRes;\\n\\n    varying vec2 vUv;\\n\\n    void main() {\\n\\n      vec2 uv;\\n\\n      uv = vUv;\\n\\n      vec2 iResolution = vec2(512., 512.);\\n      uv = gl_FragCoord.xy/iResolution.xy-0.5;\\n\\n      uv *= 0.7 - mod(uv.x+uv.y,uv.y*0.75)*1.25;\\n\\n      gl_FragColor = texture2D(uTexture, uv+0.5);\\n\\n    }\\n  ';\n\nvar gl = void 0,\n    program = void 0,\n    arrayBuffer = void 0,\n    indexBuffer = void 0,\n    texture = void 0,\n    video = void 0;\nvar then = 0,\n    now = 0,\n    delta = 0,\n    fps = 60;\n\n{\n\n    if (hasCam()) {\n        navigator.mediaDevices.getUserMedia(constraints).then(done).catch(fail);\n    }\n}\n\nfunction hasCam() {\n    return !!navigator.getUserMedia || !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\nfunction done(stream) {\n\n    initGL();\n    initProgram();\n    initArrayBuffer();\n    initIndexBuffer();\n\n    initTexture(stream);\n\n    then = window.performance.now();\n    now = 0;\n    requestAnimationFrame(render);\n}\n\nfunction fail() {}\n\nfunction initGL() {\n    var canvas = document.querySelector('#gl');\n    gl = canvas.getContext('webgl');\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n}\n\nfunction initProgram() {\n    var defs = 'precision mediump float;';\n    program = new Program(gl);\n    program.compile(vertexCode, fragmentCode, defs);\n}\n\nfunction initArrayBuffer() {\n\n    // create the arrayBuffer and its attributes\n    var data = new Float32Array([-1, 1, 0, 1, -1, -1, 0, 0, 1, 1, 1, 1, 1, -1, 1, 0]);\n\n    arrayBuffer = new ArrayBuffer(gl, data);\n    arrayBuffer.attrib('position', 2, gl.FLOAT);\n    arrayBuffer.attrib('uv', 2, gl.FLOAT);\n}\n\nfunction initIndexBuffer() {\n\n    // create the arrayBuffer and its attributes\n    var data = new Uint16Array([0, 1, 2, 2, 1, 3]);\n\n    indexBuffer = new IndexBuffer(gl, null, data);\n}\n\nfunction initTexture(stream) {\n    video = document.createElement('video');\n    video.srcObject = stream;\n    video.loop = true;\n    video.muted = true;\n    video.play();\n    video.oncanplay = function () {\n        texture = new Texture(gl);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        texture.setFilter(true, false, false); //linear, mipmap, linear mipmap\n        texture.clamp();\n    };\n}\n\nfunction render(t) {\n\n    requestAnimationFrame(render);\n\n    now = window.performance.now();\n    delta = now - then;\n\n    if (delta > 1000 / fps) {\n\n        then = now - delta % (1000 / fps);\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        if (!texture) return;\n\n        texture.fromImage(video);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture.id);\n\n        program.use();\n        program.uTexture(0);\n        //gl.uniform1i(program.uTexture(), 0);\n\n        // const fieldOfView = 45 * Math.PI / 180;\n        // const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n        // const zNear = 0.1;\n        // const zFar = 100.0;\n\n        var projectionMatrix = mat4.create();\n        // mat4.perspective(projectionMatrix,\n        //     fieldOfView,\n        //     aspect,\n        //     zNear,\n        //     zFar);\n\n        var modelViewMatrix = mat4.create();\n        // mat4.translate(modelViewMatrix, modelViewMatrix, [0.0, 0.0, -6.0]);\n        // mat4.rotate(modelViewMatrix, modelViewMatrix, t * 0.0007, [0, 1, 0]);\n        // mat4.scale(modelViewMatrix, modelViewMatrix, [1.777, 1, 1]);\n\n        program.uProjectionMatrix(projectionMatrix);\n        program.uModelViewMatrix(modelViewMatrix);\n        arrayBuffer.attribPointer(program);\n        indexBuffer.bind();\n        indexBuffer.drawTriangles();\n    }\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(3);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(5)(\"1ac51578\", content, true, {});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(4)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"#app{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}#app canvas{height:100vh}body{background:#000;padding:0;margin:0;overflow:hidden}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(6)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\nvar _UID = 0;\n\n/**\n * Program constructor. Create gl program and shaders. You can pass optional shader code to immediatly compile shaders\n *   @param {WebGLRenderingContext} gl webgl context this program belongs to\n *   @param {String} [vert=undefined] an optional vertex shader code. See {@link Program#compile}\n *   @param {String} [frag=undefined] an optional fragment shader code See {@link Program#compile}\n *   @param {String} [defs=undefined] an optional string prepend to both fragment and vertex shader code. See {@link Program#compile}.\n *   @see {@link Program#compile}\n *\n * @example <caption>For the given vertex shader</caption>\n * attribute vec3 aPosition;\n * uniform mat4 uMVP;\n * uniform vec3 uCameraPosition;\n *\n * @class\n * @classdesc Program class provide shader compilation and linking functionality.\n *              It also give you convenient access to active uniforms and attributes.\n *              Once compiled, the Program object list all used uniforms/attributes and provide getter/setter function for each one. See {@link Program} constructor.\n *\n */\nfunction Program( gl, vert, frag, defs  ){\n  this.gl = gl;\n  this.program = gl.createProgram();\n  this.vShader = gl.createShader( gl.VERTEX_SHADER );\n  this.fShader = gl.createShader( gl.FRAGMENT_SHADER );\n  this.dyns    = [];\n  this.ready   = false;\n  gl.attachShader(this.program, this.vShader);\n  gl.attachShader(this.program, this.fShader);\n\n  this._uid    = (_UID++)|0; \n  this._cuid   = (_UID++)|0; \n\n  if( vert !== undefined && frag !== undefined ){\n    this.compile( vert, frag, defs );\n  }\n}\n\n/**\n * Program.debug\n *   can be set to true to check and log compilation and linking errors (default to false)\n */\nProgram.debug = true;\n\n\n\nProgram.prototype = {\n\n  /**\n   * Shortcut for gl.useProgram()\n   * alias program.bind()\n   */\n  use : function(){\n    if( !this.ready ){\n      this._grabParameters();\n    }\n    this.gl.useProgram( this.program );\n  },\n\n  /**\n   * Compile vertex and fragment shader then link gl program\n   * This method can be safely called several times.\n   *  @param {String} vert vertex shader code\n   *  @param {String} frag fragment shader code\n   *  @param {String} [prefix=''] an optional string append to both fragment and vertex code\n   */\n  compile : function( vert, frag, prefix ){\n    this.ready   = false;\n\n    prefix = ( prefix === undefined ) ? '' : prefix+'\\n';\n\n    var gl = this.gl;\n\n    if( !( compileShader( gl, this.fShader, prefix + frag ) &&\n           compileShader( gl, this.vShader, prefix + vert ) ) ) {\n      return false;\n    }\n\n    gl.linkProgram(this.program);\n\n    if ( Program.debug && !gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      warn(gl.getProgramInfoLog(this.program));\n      return false;\n    }\n\n    // delete old accessors\n    while (this.dyns.length>0) {\n      delete this[this.dyns.pop()];\n    }\n\n    this._cuid   = (_UID++)|0; \n\n    return true;\n  },\n\n  /**\n    * Delete program and shaders\n    */\n  dispose : function() {\n    if( this.gl !== null ){\n      this.gl.deleteProgram( this.program );\n      this.gl.deleteShader(  this.fShader  );\n      this.gl.deleteShader(  this.vShader  );\n      this.gl = null;\n    }\n  },\n\n  /*\n   *  List all uniforms and attributes and create helper function on Program instance\n   *  eg :\n   *     for a uniform vec3 uDirection;\n   *     create a method\n   *        program.uDirection( 1, 0, 0 );\n   */\n  _grabParameters : function(){\n\n    var gl = this.gl,\n        prg = this.program;\n\n    var context = {\n      texIndex    : 0,\n      ublockIndex : 0\n    };\n\n    // Uniforms\n    // ========\n\n    var numUniforms = gl.getProgramParameter( prg, gl.ACTIVE_UNIFORMS );\n\n    for ( var uniformIndex = 0; uniformIndex < numUniforms; ++uniformIndex )\n    {\n      var uniform = gl.getActiveUniform( prg, uniformIndex );\n\n      // safari 8.0 issue,\n      // when recompiling shader and link the progam again, old uniforms are kept in ACTIVE_UNIFORMS count but return null here\n      if( uniform === null ){\n        gl.getError(); // also flush error\n        continue;\n      }\n\n      var uName   = uniform.name,\n          n       = uName.indexOf('[');\n\n      if( n >= 0 ){\n        uName = uName.substring(0, n);\n      }\n\n      var uLocation = gl.getUniformLocation( prg, uniform.name );\n      \n      // in Webgl2 location can be null here if uniform is member of a uniform block\n      if( uLocation !== null ) \n      {\n        this[uName] = getUniformSetter( uniform.type, uLocation, gl, context );\n        this.dyns.push( uName );\n      }\n    }\n\n    // Attributes\n    // ==========\n\n    var numAttribs = gl.getProgramParameter( prg, gl.ACTIVE_ATTRIBUTES );\n\n    for (var aIndex = 0; aIndex < numAttribs; ++aIndex )\n    {\n      var attribName = gl.getActiveAttrib( prg, aIndex ).name;\n      var aLocation  = gl.getAttribLocation( prg, attribName );\n      this[attribName] = getAttribAccess( aLocation );\n      this.dyns.push( attribName );\n    }\n\n\n    // UniformBlock\n    // ============\n\n    if( gl.ACTIVE_UNIFORM_BLOCKS !== undefined ) {\n\n      var numBlocks = gl.getProgramParameter( prg, gl.ACTIVE_UNIFORM_BLOCKS );\n\n      for ( var blockIndex = 0; blockIndex < numBlocks; ++blockIndex )\n      {\n        var blockName = gl.getActiveUniformBlockName( prg, blockIndex );\n        this[blockName] = getUniformBufferSetFunction( blockIndex, gl, context );\n        this.dyns.push( blockName );\n      }\n\n    }\n\n    this.ready   = true;\n  }\n\n\n};\n\n/**\n * alias to Program.use()\n */\nProgram.prototype.bind = Program.prototype.use;\n\n\n\n/*\n * internal logs\n */\nfunction warn(str){\n  console.warn(str);\n}\n\n\n\n// -------------------------------------------------\n//                    UTILITIES\n// -------------------------------------------------\n\n/*\n * Shader logging utilities\n */\n\nvar __pads = ['','   ','  ',' ',''];\n\nfunction appendLine( l, i ){\n  return __pads[String(i+1).length] + ( i+1 ) + ': ' + l;\n}\n\n/*\n * Format shader code\n * add padded lines number\n */\nfunction formatCode( shader ) {\n  return shader.split( '\\n' ).map( appendLine ).join( '\\n' );\n}\n\n/*\n * Shader compilation utility\n */\nfunction compileShader( gl, shader, code ){\n  gl.shaderSource( shader, code );\n  gl.compileShader( shader );\n\n  if (Program.debug && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    warn( gl.getShaderInfoLog(shader) );\n    warn( formatCode( code ) );\n    return false;\n  }\n\n  return true;\n}\n\n\n\nvar USetFMap = {};\nUSetFMap[ 5126  /*FLOAT       */ ] = '1f';\nUSetFMap[ 35664 /*FLOAT_VEC2  */ ] = '2f';\nUSetFMap[ 35665 /*FLOAT_VEC3  */ ] = '3f';\nUSetFMap[ 35666 /*FLOAT_VEC4  */ ] = '4f';\nUSetFMap[ 35670 /*BOOL        */ ] =\nUSetFMap[ 5124  /*INT         */ ] =\nUSetFMap[ 35678 /*SAMPLER_2D  */ ] =\nUSetFMap[ 35680 /*SAMPLER_CUBE*/ ] = '1i';\nUSetFMap[ 35671 /*BOOL_VEC2   */ ] =\nUSetFMap[ 35667 /*INT_VEC2    */ ] = '2i';\nUSetFMap[ 35672 /*BOOL_VEC3   */ ] =\nUSetFMap[ 35668 /*INT_VEC3    */ ] = '3i';\nUSetFMap[ 35673 /*BOOL_VEC4   */ ] =\nUSetFMap[ 35669 /*INT_VEC4    */ ] = '4i';\nUSetFMap[ 35674 /*FLOAT_MAT2  */ ] = 'Matrix2f';\nUSetFMap[ 35675 /*FLOAT_MAT3  */ ] = 'Matrix3f';\nUSetFMap[ 35676 /*FLOAT_MAT4  */ ] = 'Matrix4f';\n\n/*\n * Uniform upload utilities\n */\n\nfunction getUniformSetFunctionName( type ){\n  type = String(type);\n  return 'uniform' + USetFMap[type];\n}\n\n/*\n * For a given uniform's type, return the proper setter function\n */\nfunction getUniformSetter( type, location, gl, context ){\n  switch( type ){\n    case gl.FLOAT_MAT2  :\n    case gl.FLOAT_MAT3  :\n    case gl.FLOAT_MAT4  :\n      return getMatrixSetFunction( type, location, gl, context );\n\n    case gl.SAMPLER_2D  :\n    case gl.SAMPLER_CUBE:\n    case 0x8B62 : //gl.SAMPLER_2D_SHADOW:\n    case 0x8B5F : //gl.SAMPLER_3D:\n      return getSamplerSetFunction( type, location, gl, context );\n\n    default  :\n      return getUniformSetFunction( type, location, gl, context );\n  }\n}\n\n\n/*\n * setter factory for vector uniforms\n * return a function wich take both array or arguments\n */\nfunction getUniformSetFunction( type, location, gl, context ){\n  context;\n  var fname = getUniformSetFunctionName( type );\n  return function(){\n    if( arguments.length === 1 && arguments[0].length !== undefined ){\n      gl[fname+'v']( location, arguments[0] );\n    } else if( arguments.length > 0) {\n      gl[fname].apply( gl, Array.prototype.concat.apply( location, arguments) );\n    }\n    return location;\n  };\n}\n\n/*\n * setter factory for matrix uniforms\n */\nfunction getMatrixSetFunction( type, location, gl, context ){\n  context;\n  var fname = getUniformSetFunctionName( type );\n  return function(){\n    if( arguments.length > 0 && arguments[0].length !== undefined ){\n      var transpose = (arguments.length > 1) ? !!arguments[1] : false;\n      gl[fname+'v']( location, transpose, arguments[0] );\n    }\n    return location;\n  };\n}\n\n/*\n * setter factory for sampler uniforms\n */\nfunction getSamplerSetFunction( type, location, gl, context ){\n  var unit = context.texIndex++;\n  return function(){\n    if( arguments.length === 1 ) {\n      if( arguments[0].bind !== undefined ){ // is texture\n        arguments[0].bind( unit );\n        gl.uniform1i( location, unit );\n      } else {\n        gl.uniform1i( location, arguments[0] );\n      }\n    }\n    return location;\n  };\n}\n\n\n/*\n * setter factory for uniform buffers\n * can be \n *   f( buffer ) \n *     buffer is bound to auto increment binding point unit and block binding reset to this point\n *   f( unit )\n *     only set the block binding point to given unit\n */\nfunction getUniformBufferSetFunction( index, gl, context ){\n  var unit = context.ublockIndex++;\n  return function(){\n    if( arguments.length === 1 ) {\n      if( arguments[0] instanceof WebGLBuffer ){ // is buffer\n        gl.uniformBlockBinding(this.program, index, unit);\n        gl.bindBufferBase(gl.UNIFORM_BUFFER, unit, arguments[0] );\n      } else {\n        gl.uniformBlockBinding(this.program, index, arguments[0]);\n      }\n    }\n    return index;\n  };\n}\n\n/*\n * getter factory for attributes\n */\nfunction getAttribAccess( attrib ){\n  return function(){\n    return attrib;\n  };\n}\n\n\n\nmodule.exports = Program;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BufferUtils = __webpack_require__( 0 );\n\n/*\n * GL_ARRAY_BUFFER */\nvar TGT = 0x8892;\n\n\n\n/**\n * @class\n * @implements {Drawable}\n * @param {WebGLRenderingContext} gl      then webgl context this ArrayBuffer belongs to\n * @param {TypedArray|uint} [data]   optional data to copy to buffer, or the size (in bytes)\n * @param {GLenum} [usage=GL_STATIC_DRAW] the usage hint for this buffer.\n *\n */\nfunction ArrayBuffer( gl, data, usage ){\n  this.gl         = gl;\n  this.usage      = usage || gl.STATIC_DRAW;\n  this.buffer     = gl.createBuffer();\n  this.attribs    = [];\n  this.stride     = 0;\n  this.byteLength = 0;\n  this.length     = 0;\n\n  if( data ){\n    this.data( data );\n  }\n}\n\n\nArrayBuffer.prototype = {\n\n  /**\n   * Bind the underlying webgl buffer.\n   */\n  bind: function(){\n    this.gl.bindBuffer( TGT, this.buffer );\n  },\n\n  /**\n   * Add attribute declaration for this buffer. Once attributes declared, the buffer can be linked to\n   * programs attributes using {@link ArrayBuffer#attribPointer}\n   *  @param {string} name the name of the program's attribute\n   *  @param {uint} size the size of the attribute (3 for a vec3)\n   *  @param {GLenum} type the type of data (GL_FLOAT, GL_SHORT etc)\n   *  @param {boolean} [normalize=false] indicate if the data must be normalized\n   */\n  attrib: function( name, size, type, normalize ){\n    this.attribs.push({\n      name      : name       ,\n      type      : 0|type     ,\n      size      : 0|size     ,\n      normalize : !!normalize,\n      offset    : this.stride\n    });\n    this.stride += BufferUtils.getComponentSize( type ) * size;\n    this._computeLength();\n    return this;\n  },\n\n  /**\n   * Fill webgl buffer with the given data. You can also pass a uint  to allocate the buffer to the given size.\n   *   @param {TypedArray|uint} array the data to send to the buffer, or a size.\n   */\n  data: function( array ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n    gl.bufferData( TGT, array, this.usage );\n    gl.bindBuffer( TGT, null );\n\n    this.byteLength = ( array.byteLength === undefined ) ? array : array.byteLength;\n    this._computeLength();\n  },\n\n  /**\n   * Set a part of the buffer with the given data, starting a offset (in bytes)\n   *  @param {typedArray} array the data to send to buffer\n   *  @param {uint} offset the offset in byte where the data will be written\n   */\n  subData: function( array, offset ){\n    var gl = this.gl;\n    gl.bindBuffer(    TGT, this.buffer );\n    gl.bufferSubData( TGT, offset, array );\n    gl.bindBuffer(    TGT, null );\n  },\n\n  /**\n   * Link given program attributes to this buffer. You should first declare attributes using {@link ArrayBuffer#attrib}\n   * before calling this method.\n   *   @param {Program} program the nanogl Program\n   */\n  attribPointer: function( program ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n\n    for (var i = 0; i < this.attribs.length; i++) {\n      var attrib = this.attribs[i];\n\n      if( program[attrib.name] !== undefined ){\n        var aLocation = program[attrib.name]();\n        gl.enableVertexAttribArray( aLocation );\n        gl.vertexAttribPointer( aLocation,\n                                attrib.size,\n                                attrib.type,\n                                attrib.normalize,\n                                this.stride,\n                                attrib.offset\n                              );\n      }\n\n    }\n  },\n\n  /**\n   * Shortcut to gl.drawArrays\n   *   @param {GLenum} mode the type of primitive to draw (GL_TRIANGLE, GL_POINTS etc)\n   *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n   *   @param {uint} [offset=0] the position of the first vertex to draw\n   */\n  draw: function( mode, count, offset ){\n    count  = ( count === undefined  ) ? this.length : count;\n    this.gl.drawArrays( mode, offset, 0|count );\n  },\n\n  /**\n   * Delete underlying webgl objects\n   */\n  dispose: function(){\n    this.gl.deleteBuffer( this.buffer );\n    this.buffer = null;\n    this.gl = null;\n  },\n\n\n  _computeLength: function(){\n    if( this.stride > 0 ) {\n      this.length = this.byteLength / this.stride;\n    }\n  }\n\n};\n\n/*\n * Implement Drawable\n */\nBufferUtils.Drawable( ArrayBuffer.prototype );\n\n\nmodule.exports = ArrayBuffer;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BufferUtils = __webpack_require__( 0 );\n\n/* GL_ELEMENT_ARRAY_BUFFER */\nvar TGT = 0x8893;\n\n/**\n * @class\n * @implements {Drawable}\n * @param {WebGLRenderingContext} gl      then webgl context this ArrayBuffer belongs to\n * @param {GLenum} [type=GL_UNSIGNED_SHORT]  the inetger type of the indices (GL_UNSIGNED_BYTE, GL_UNSIGNED_INT etc)\n * @param {TypedArray|uint} [data]   optional data to copy to buffer, or the size (in bytes)\n * @param {GLenum} [usage=GL_STATIC_DRAW] the usage hint for this buffer.\n *\n */\nfunction IndexBuffer( gl, type, data, usage ){\n  this.gl       = gl;\n  this.buffer   = gl.createBuffer();\n  this.usage    = usage || gl.STATIC_DRAW;\n  this.type     = 0;\n  this.typeSize = 0;\n  this.size     = 0;\n\n  this.setType( type || gl.UNSIGNED_SHORT );\n\n  if( data ){\n    this.data( data );\n  }\n}\n\n\nIndexBuffer.prototype = {\n\n\n  /**\n   * Bind the underlying webgl buffer.\n   */\n  bind: function(){\n    this.gl.bindBuffer( TGT, this.buffer );\n  },\n\n  /**\n   *  Change the type of internal type of the IndexBuffer\n   *  @param {GLenum} type  the integer type of the indices (GL_UNSIGNED_BYTE, GL_UNSIGNED_INT etc)\n   */\n  setType: function( type ){\n    this.type = type;\n    this.typeSize = BufferUtils.getComponentSize( type );\n  },\n\n  /**\n   * Fill webgl buffer with the given data. You can also pass a uint  to allocate the buffer to the given size.\n   *   @param {TypedArray|uint} array the data to send to the buffer, or a size.\n   */\n  data: function( array ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n    gl.bufferData( TGT, array, this.usage );\n    gl.bindBuffer( TGT, null );\n    this.size = ( array.byteLength === undefined ) ? array : array.byteLength;\n  },\n\n  /**\n   * Set a part of the buffer with the given data, starting a offset (in bytes)\n   *  @param {typedArray} array the data to send to buffer\n   *  @param {uint} offset the offset in byte where the data will be written\n   */\n  subData: function( array, offset ){\n    var gl = this.gl;\n    gl.bindBuffer(    TGT, this.buffer );\n    gl.bufferSubData( TGT, offset, array );\n    gl.bindBuffer(    TGT, null );\n  },\n\n\n  /**\n   * Delete underlying webgl objects\n   */\n  dispose: function(){\n    this.gl.deleteBuffer( this.buffer );\n    this.buffer = null;\n    this.gl = null;\n  },\n\n  /**\n   * Shortcut to gl.drawArrays\n   *   @param {GLenum} mode the type of primitive to draw (GL_TRIANGLE, GL_POINTS etc)\n   *   @param {uint} [count] the number of indices to draw (full buffer is used if omited)\n   *   @param {uint} [offset=0] the position of the first index to draw\n   */\n  draw: function( mode, count, offset ){\n    count  = ( count === undefined  ) ? this.size/this.typeSize : count;\n    this.gl.drawElements( mode, count, this.type, 0|offset );\n  }\n\n\n};\n\n\n/*\n * Implement Drawable\n */\nBufferUtils.Drawable( IndexBuffer.prototype );\n\n\nmodule.exports = IndexBuffer;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar _UID = 0;\nvar T2D = 0x0DE1;\n\n/*\n * compute filtering enum, return one of the following :\n *  NEAREST\n *  LINEAR\n *  NEAREST_MIPMAP_NEAREST\n *  LINEAR_MIPMAP_NEAREST\n *  NEAREST_MIPMAP_LINEAR\n *  LINEAR_MIPMAP_LINEAR\n */\nfunction getFilter( smooth, mipmap, miplinear ){\n  return 0x2600 | (+smooth) | (+mipmap<<8) | ( +( mipmap && miplinear )<<1 );\n}\n\n\n/**\n * @class\n * @classdesc Texture class manage TEXTURE_2D types textures\n *\n *  @param {WebGLRenderingContext} gl webgl context the texture belongs to\n *  @param {GLenum} [format  =GL_RGB] the pixel format, default to gl.RGB (can be gl.RGB, gl.RGBA, gl.LUMINANCE...)\n *  @param {GLenum} [type    =GL_UNSIGNED_BYTE] the pixel data type, default to gl.UNSIGNED_BYTE\n *  @param {GLenum} [internal=format] the pixel internal format, default to the same value than 'format' parameter (which must be in webgl 1)\n */\nfunction Texture( gl, format, type, internal ){\n  this._uid = _UID++;\n  this.gl = gl;\n  this.id = gl.createTexture();\n  this.width  = 0;\n  this.height = 0;\n\n  this.setFormat( format, type, internal );\n\n  gl.bindTexture( T2D, this.id );\n  this.setFilter( true );\n\n}\n\n\nTexture.prototype = {\n\n  /**\n   * define underlying format, internal format and data type of texture\n   *  @param {GLenum} [format  =GL_RGB] the pixel format, default to gl.RGB (can be gl.RGB, gl.RGBA, gl.LUMINANCE...)\n   *  @param {GLenum} [type    =GL_UNSIGNED_BYTE] the pixel data type, default to gl.UNSIGNED_BYTE\n   *  @param {GLenum} [internal=format] the pixel internal format, default to the same value than 'format' parameter (which must be in webgl 1)\n   */\n  setFormat : function( format, type, internal ){\n    this.format   = format   || this.gl.RGB;\n    this.internal = internal || this.format;\n    this.type     = type     || this.gl.UNSIGNED_BYTE;\n  },\n\n  /**\n   * set texture data from html source\n   *   @param {TexImageSource} img the source. Can be ImageBitmap, ImageData, HTMLImageElement, HTMLCanvasElement, HTMLVideoElement\n   */\n  fromImage : function( img ){\n    var gl = this.gl;\n\n    this.width  = img.width;\n    this.height = img.height;\n\n    gl.bindTexture( T2D, this.id );\n    gl.texImage2D(  T2D, 0, this.internal, this.format, this.type, img );\n  },\n\n  /**\n   * Allocate texture to the given size, with optional data (TypedArray) and data type\n   *  @param {number} width     the new texture's width\n   *  @param {number} height    the new texture's height\n   *  @param {TypedArray} [data=null]  TypedArray of texture data, can be null\n   *  @param {GLenum} [dataType=GL_UNSIGNED_BYTE] can be gl.UNSIGNED_BYTE, gl.FLOAT, half.HALF_FLOAT_OES etc depending on available extensions\n   */\n  fromData : function( width, height, data ){\n    var gl = this.gl;\n\n    this.width  = width;\n    this.height = height;\n\n    data = data || null;\n\n    gl.bindTexture( T2D, this.id );\n    gl.texImage2D( T2D, 0, this.internal, width, height, 0, this.format, this.type, data );\n  },\n\n  /**\n   * Bind the texture\n   *   @param {uint} [unit=undefined] optional texture unit to make active before binding\n   */\n  bind : function( unit ){\n    var gl = this.gl;\n    if( unit !== undefined ){\n      gl.activeTexture( gl.TEXTURE0 + (0|unit) );\n    }\n    gl.bindTexture( T2D, this.id );\n  },\n\n  /**\n   * delete the webgl texture\n   *\n   */\n  dispose : function( ){\n    this.gl.deleteTexture( this.id );\n    this.id = null;\n    this.gl = null;\n  },\n\n  /**\n   * Change the filtering parameters\n   *   @param {boolean} [smooth=false]    if true, use LINEAR filtering\n   *   @param {boolean} [mipmap=false]    if true, enable mipmaping\n   *   @param {boolean} [miplinear=false] if true, use linear Mipmapping\n   */\n  setFilter : function( smooth, mipmap, miplinear ){\n    var gl = this.gl;\n    var filter = getFilter( !!smooth, !!mipmap, !!miplinear);\n    gl.texParameteri( T2D, gl.TEXTURE_MAG_FILTER, getFilter( !!smooth, false, false ) );\n    gl.texParameteri( T2D, gl.TEXTURE_MIN_FILTER, filter );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.REPEAT\n   */\n  repeat : function( ){\n    this.wrap( this.gl.REPEAT );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.CLAMP_TO_EDGE\n   */\n  clamp : function( ){\n    this.wrap( this.gl.CLAMP_TO_EDGE );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.MIRRORED_REPEAT\n   */\n  mirror : function( ){\n    this.wrap( this.gl.MIRRORED_REPEAT );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to the given value\n   *  @param {GLenum} wrap the wrap enum\n   */\n  wrap : function( wrap ) {\n    var gl = this.gl;\n    gl.texParameteri( T2D, gl.TEXTURE_WRAP_S, wrap );\n    gl.texParameteri( T2D, gl.TEXTURE_WRAP_T, wrap );\n  }\n\n};\n\nmodule.exports = Texture;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = __webpack_require__(12);\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n    \n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    \n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    \n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      \n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n      \n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n        \n  return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nmodule.exports = mat4;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nmodule.exports = glMatrix;\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16603d31ec5da9d5e6d6","module.exports = {\n\n  getComponentSize : function( type ){\n    switch( type ){\n      case 0x1400 : //gl.BYTE:\n      case 0x1401 : //gl.UNSIGNED_BYTE:\n        return 1;\n      case 0x1402 : //gl.SHORT:\n      case 0x1403 : //gl.UNSIGNED_SHORT:\n        return 2;\n      case 0x1404 : //gl.INT:\n      case 0x1405 : //gl.UNSIGNED_INT:\n      case 0x1406 : //gl.FLOAT:\n        return 4;\n      default :\n        return 0;\n    }\n  },\n\n  Drawable: function( proto ){\n    proto.drawPoints         = function(count, offset){ this.draw( 0 /* POINTS         */ , count, offset ); };\n    proto.drawLines          = function(count, offset){ this.draw( 1 /* LINES          */ , count, offset ); };\n    proto.drawLineLoop       = function(count, offset){ this.draw( 2 /* LINE_LOOP      */ , count, offset ); };\n    proto.drawLineStrip      = function(count, offset){ this.draw( 3 /* LINE_STRIP     */ , count, offset ); };\n    proto.drawTriangles      = function(count, offset){ this.draw( 4 /* TRIANGLES      */ , count, offset ); };\n    proto.drawTriangleStrip  = function(count, offset){ this.draw( 5 /* TRIANGLE_STRIP */ , count, offset ); };\n    proto.drawTriangleFan    = function(count, offset){ this.draw( 6 /* TRIANGLE_FAN   */ , count, offset ); };\n  }\n\n};\n\n\n/**\n * Interface for buffer that can be drawn.\n *\n * @interface Drawable\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.POINTS, offset, count )\n * @function\n * @name Drawable#drawPoints\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINE_STRIP, offset, count )\n * @function\n * @name Drawable#drawLineStrip\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINE_LOOP, offset, count )\n * @function\n * @name Drawable#drawLineLoop\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.LINES, offset, count )\n * @function\n * @name Drawable#drawLines\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLE_STRIP, offset, count )\n * @function\n * @name Drawable#drawTriangleStrip\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLE_FAN, offset, count )\n * @function\n * @name Drawable#drawTriangleFan\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n/**\n * Shortcut to gl.drawArrays( gl.TRIANGLES, offset, count )\n * @function\n * @name Drawable#drawTriangles\n *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n *   @param {uint} [offset=0] the position in buffer to start from.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanogl/bufferutils.js\n// module id = 0\n// module chunks = 0","import \"./styles.scss\";\n\nconst Program = require('nanogl/program');\nconst ArrayBuffer = require('nanogl/arraybuffer');\nconst IndexBuffer = require('nanogl/indexbuffer');\nconst Texture = require('nanogl/texture');\n\nconst mat4 = require( 'gl-matrix/src/gl-matrix/mat4' );\n\nconst constraints =  {\n        audio: false,\n        video: {\n          width: { min: 640, max: 1920 },\n          height: { min: 480, max: 1080 },\n          frameRate: { ideal: 50, max: 60 }\n        }\n      };\n\n const vertexCode = `\n    attribute vec3 position;\n    attribute vec2 uv;\n    uniform mat4 uProjectionMatrix;\n    uniform mat4 uModelViewMatrix;\n    varying vec2 vUv;\n    void main() {\n        vUv = uv;\n        gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\n  const fragmentCode = `\n\n    uniform sampler2D uTexture;\n    uniform lowp vec2 uRes;\n\n    varying vec2 vUv;\n\n    void main() {\n\n      vec2 uv;\n\n      uv = vUv;\n\n      vec2 iResolution = vec2(512., 512.);\n      uv = gl_FragCoord.xy/iResolution.xy-0.5;\n\n      uv *= 0.7 - mod(uv.x+uv.y,uv.y*0.75)*1.25;\n\n      gl_FragColor = texture2D(uTexture, uv+0.5);\n\n    }\n  `;\n\nlet gl, program, arrayBuffer, indexBuffer, texture, video;\nlet then = 0, now = 0, delta = 0, fps = 60;\n\n{\n\n  if ( hasCam() ) {\n    navigator\n     .mediaDevices\n     .getUserMedia(constraints)\n     .then(done)\n     .catch(fail);\n  }\n\n}\n\nfunction hasCam(){\n  return !!navigator.getUserMedia || !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\nfunction done( stream ){\n\n    initGL();\n    initProgram();\n    initArrayBuffer();\n    initIndexBuffer();\n\n    initTexture( stream );\n\n    then = window.performance.now();\n    now = 0;\n    requestAnimationFrame(render);\n}\n\nfunction fail(){\n\n}\n\nfunction initGL() {\n    const canvas = document.querySelector('#gl');\n    gl = canvas.getContext('webgl');\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n}\n\nfunction initProgram() {\n    let defs = 'precision mediump float;';\n    program = new Program(gl);\n    program.compile(vertexCode, fragmentCode, defs);\n}\n\nfunction initArrayBuffer() {\n\n    // create the arrayBuffer and its attributes\n    const data = new Float32Array([\n        -1,  1, 0, 1,\n        -1, -1, 0, 0,\n        1,  1, 1, 1,\n        1, -1, 1, 0\n    ]);\n\n    arrayBuffer = new ArrayBuffer(gl, data);\n    arrayBuffer.attrib('position', 2, gl.FLOAT);\n    arrayBuffer.attrib('uv', 2, gl.FLOAT);\n}\n\nfunction initIndexBuffer() {\n\n    // create the arrayBuffer and its attributes\n    const data = new Uint16Array([\n        0, 1, 2,\n        2, 1, 3\n    ]);\n\n    indexBuffer = new IndexBuffer(gl, null, data);\n}\n\nfunction initTexture( stream ) {\n    video = document.createElement('video');\n    video.srcObject = stream;\n    video.loop = true;\n    video.muted = true;\n    video.play();\n    video.oncanplay = () => {\n        texture = new Texture(gl);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        texture.setFilter(true, false, false); //linear, mipmap, linear mipmap\n        texture.clamp();\n    };\n}\n\nfunction render(t) {\n\n    requestAnimationFrame(render);\n\n    now = window.performance.now();\n    delta = now - then;\n\n    if (delta > (1000/fps)) {\n\n       then = now - (delta % (1000/fps) );\n\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n      if (!texture) return;\n\n      texture.fromImage(video);\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, texture.id);\n\n      program.use();\n      program.uTexture( 0 );\n      //gl.uniform1i(program.uTexture(), 0);\n\n      // const fieldOfView = 45 * Math.PI / 180;\n      // const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n      // const zNear = 0.1;\n      // const zFar = 100.0;\n\n      const projectionMatrix = mat4.create();\n      // mat4.perspective(projectionMatrix,\n      //     fieldOfView,\n      //     aspect,\n      //     zNear,\n      //     zFar);\n\n      const modelViewMatrix = mat4.create();\n      // mat4.translate(modelViewMatrix, modelViewMatrix, [0.0, 0.0, -6.0]);\n      // mat4.rotate(modelViewMatrix, modelViewMatrix, t * 0.0007, [0, 1, 0]);\n      // mat4.scale(modelViewMatrix, modelViewMatrix, [1.777, 1, 1]);\n\n      program.uProjectionMatrix(projectionMatrix);\n      program.uModelViewMatrix(modelViewMatrix);\n      arrayBuffer.attribPointer(program);\n      indexBuffer.bind();\n      indexBuffer.drawTriangles();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./styles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"1ac51578\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles.scss\n// module id = 2\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#app{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}#app canvas{height:100vh}body{background:#000;padding:0;margin:0;overflow:hidden}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/styles.scss\n// module id = 3\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 4\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 5\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 6\n// module chunks = 0","\nvar _UID = 0;\n\n/**\n * Program constructor. Create gl program and shaders. You can pass optional shader code to immediatly compile shaders\n *   @param {WebGLRenderingContext} gl webgl context this program belongs to\n *   @param {String} [vert=undefined] an optional vertex shader code. See {@link Program#compile}\n *   @param {String} [frag=undefined] an optional fragment shader code See {@link Program#compile}\n *   @param {String} [defs=undefined] an optional string prepend to both fragment and vertex shader code. See {@link Program#compile}.\n *   @see {@link Program#compile}\n *\n * @example <caption>For the given vertex shader</caption>\n * attribute vec3 aPosition;\n * uniform mat4 uMVP;\n * uniform vec3 uCameraPosition;\n *\n * @class\n * @classdesc Program class provide shader compilation and linking functionality.\n *              It also give you convenient access to active uniforms and attributes.\n *              Once compiled, the Program object list all used uniforms/attributes and provide getter/setter function for each one. See {@link Program} constructor.\n *\n */\nfunction Program( gl, vert, frag, defs  ){\n  this.gl = gl;\n  this.program = gl.createProgram();\n  this.vShader = gl.createShader( gl.VERTEX_SHADER );\n  this.fShader = gl.createShader( gl.FRAGMENT_SHADER );\n  this.dyns    = [];\n  this.ready   = false;\n  gl.attachShader(this.program, this.vShader);\n  gl.attachShader(this.program, this.fShader);\n\n  this._uid    = (_UID++)|0; \n  this._cuid   = (_UID++)|0; \n\n  if( vert !== undefined && frag !== undefined ){\n    this.compile( vert, frag, defs );\n  }\n}\n\n/**\n * Program.debug\n *   can be set to true to check and log compilation and linking errors (default to false)\n */\nProgram.debug = true;\n\n\n\nProgram.prototype = {\n\n  /**\n   * Shortcut for gl.useProgram()\n   * alias program.bind()\n   */\n  use : function(){\n    if( !this.ready ){\n      this._grabParameters();\n    }\n    this.gl.useProgram( this.program );\n  },\n\n  /**\n   * Compile vertex and fragment shader then link gl program\n   * This method can be safely called several times.\n   *  @param {String} vert vertex shader code\n   *  @param {String} frag fragment shader code\n   *  @param {String} [prefix=''] an optional string append to both fragment and vertex code\n   */\n  compile : function( vert, frag, prefix ){\n    this.ready   = false;\n\n    prefix = ( prefix === undefined ) ? '' : prefix+'\\n';\n\n    var gl = this.gl;\n\n    if( !( compileShader( gl, this.fShader, prefix + frag ) &&\n           compileShader( gl, this.vShader, prefix + vert ) ) ) {\n      return false;\n    }\n\n    gl.linkProgram(this.program);\n\n    if ( Program.debug && !gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      warn(gl.getProgramInfoLog(this.program));\n      return false;\n    }\n\n    // delete old accessors\n    while (this.dyns.length>0) {\n      delete this[this.dyns.pop()];\n    }\n\n    this._cuid   = (_UID++)|0; \n\n    return true;\n  },\n\n  /**\n    * Delete program and shaders\n    */\n  dispose : function() {\n    if( this.gl !== null ){\n      this.gl.deleteProgram( this.program );\n      this.gl.deleteShader(  this.fShader  );\n      this.gl.deleteShader(  this.vShader  );\n      this.gl = null;\n    }\n  },\n\n  /*\n   *  List all uniforms and attributes and create helper function on Program instance\n   *  eg :\n   *     for a uniform vec3 uDirection;\n   *     create a method\n   *        program.uDirection( 1, 0, 0 );\n   */\n  _grabParameters : function(){\n\n    var gl = this.gl,\n        prg = this.program;\n\n    var context = {\n      texIndex    : 0,\n      ublockIndex : 0\n    };\n\n    // Uniforms\n    // ========\n\n    var numUniforms = gl.getProgramParameter( prg, gl.ACTIVE_UNIFORMS );\n\n    for ( var uniformIndex = 0; uniformIndex < numUniforms; ++uniformIndex )\n    {\n      var uniform = gl.getActiveUniform( prg, uniformIndex );\n\n      // safari 8.0 issue,\n      // when recompiling shader and link the progam again, old uniforms are kept in ACTIVE_UNIFORMS count but return null here\n      if( uniform === null ){\n        gl.getError(); // also flush error\n        continue;\n      }\n\n      var uName   = uniform.name,\n          n       = uName.indexOf('[');\n\n      if( n >= 0 ){\n        uName = uName.substring(0, n);\n      }\n\n      var uLocation = gl.getUniformLocation( prg, uniform.name );\n      \n      // in Webgl2 location can be null here if uniform is member of a uniform block\n      if( uLocation !== null ) \n      {\n        this[uName] = getUniformSetter( uniform.type, uLocation, gl, context );\n        this.dyns.push( uName );\n      }\n    }\n\n    // Attributes\n    // ==========\n\n    var numAttribs = gl.getProgramParameter( prg, gl.ACTIVE_ATTRIBUTES );\n\n    for (var aIndex = 0; aIndex < numAttribs; ++aIndex )\n    {\n      var attribName = gl.getActiveAttrib( prg, aIndex ).name;\n      var aLocation  = gl.getAttribLocation( prg, attribName );\n      this[attribName] = getAttribAccess( aLocation );\n      this.dyns.push( attribName );\n    }\n\n\n    // UniformBlock\n    // ============\n\n    if( gl.ACTIVE_UNIFORM_BLOCKS !== undefined ) {\n\n      var numBlocks = gl.getProgramParameter( prg, gl.ACTIVE_UNIFORM_BLOCKS );\n\n      for ( var blockIndex = 0; blockIndex < numBlocks; ++blockIndex )\n      {\n        var blockName = gl.getActiveUniformBlockName( prg, blockIndex );\n        this[blockName] = getUniformBufferSetFunction( blockIndex, gl, context );\n        this.dyns.push( blockName );\n      }\n\n    }\n\n    this.ready   = true;\n  }\n\n\n};\n\n/**\n * alias to Program.use()\n */\nProgram.prototype.bind = Program.prototype.use;\n\n\n\n/*\n * internal logs\n */\nfunction warn(str){\n  console.warn(str);\n}\n\n\n\n// -------------------------------------------------\n//                    UTILITIES\n// -------------------------------------------------\n\n/*\n * Shader logging utilities\n */\n\nvar __pads = ['','   ','  ',' ',''];\n\nfunction appendLine( l, i ){\n  return __pads[String(i+1).length] + ( i+1 ) + ': ' + l;\n}\n\n/*\n * Format shader code\n * add padded lines number\n */\nfunction formatCode( shader ) {\n  return shader.split( '\\n' ).map( appendLine ).join( '\\n' );\n}\n\n/*\n * Shader compilation utility\n */\nfunction compileShader( gl, shader, code ){\n  gl.shaderSource( shader, code );\n  gl.compileShader( shader );\n\n  if (Program.debug && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    warn( gl.getShaderInfoLog(shader) );\n    warn( formatCode( code ) );\n    return false;\n  }\n\n  return true;\n}\n\n\n\nvar USetFMap = {};\nUSetFMap[ 5126  /*FLOAT       */ ] = '1f';\nUSetFMap[ 35664 /*FLOAT_VEC2  */ ] = '2f';\nUSetFMap[ 35665 /*FLOAT_VEC3  */ ] = '3f';\nUSetFMap[ 35666 /*FLOAT_VEC4  */ ] = '4f';\nUSetFMap[ 35670 /*BOOL        */ ] =\nUSetFMap[ 5124  /*INT         */ ] =\nUSetFMap[ 35678 /*SAMPLER_2D  */ ] =\nUSetFMap[ 35680 /*SAMPLER_CUBE*/ ] = '1i';\nUSetFMap[ 35671 /*BOOL_VEC2   */ ] =\nUSetFMap[ 35667 /*INT_VEC2    */ ] = '2i';\nUSetFMap[ 35672 /*BOOL_VEC3   */ ] =\nUSetFMap[ 35668 /*INT_VEC3    */ ] = '3i';\nUSetFMap[ 35673 /*BOOL_VEC4   */ ] =\nUSetFMap[ 35669 /*INT_VEC4    */ ] = '4i';\nUSetFMap[ 35674 /*FLOAT_MAT2  */ ] = 'Matrix2f';\nUSetFMap[ 35675 /*FLOAT_MAT3  */ ] = 'Matrix3f';\nUSetFMap[ 35676 /*FLOAT_MAT4  */ ] = 'Matrix4f';\n\n/*\n * Uniform upload utilities\n */\n\nfunction getUniformSetFunctionName( type ){\n  type = String(type);\n  return 'uniform' + USetFMap[type];\n}\n\n/*\n * For a given uniform's type, return the proper setter function\n */\nfunction getUniformSetter( type, location, gl, context ){\n  switch( type ){\n    case gl.FLOAT_MAT2  :\n    case gl.FLOAT_MAT3  :\n    case gl.FLOAT_MAT4  :\n      return getMatrixSetFunction( type, location, gl, context );\n\n    case gl.SAMPLER_2D  :\n    case gl.SAMPLER_CUBE:\n    case 0x8B62 : //gl.SAMPLER_2D_SHADOW:\n    case 0x8B5F : //gl.SAMPLER_3D:\n      return getSamplerSetFunction( type, location, gl, context );\n\n    default  :\n      return getUniformSetFunction( type, location, gl, context );\n  }\n}\n\n\n/*\n * setter factory for vector uniforms\n * return a function wich take both array or arguments\n */\nfunction getUniformSetFunction( type, location, gl, context ){\n  context;\n  var fname = getUniformSetFunctionName( type );\n  return function(){\n    if( arguments.length === 1 && arguments[0].length !== undefined ){\n      gl[fname+'v']( location, arguments[0] );\n    } else if( arguments.length > 0) {\n      gl[fname].apply( gl, Array.prototype.concat.apply( location, arguments) );\n    }\n    return location;\n  };\n}\n\n/*\n * setter factory for matrix uniforms\n */\nfunction getMatrixSetFunction( type, location, gl, context ){\n  context;\n  var fname = getUniformSetFunctionName( type );\n  return function(){\n    if( arguments.length > 0 && arguments[0].length !== undefined ){\n      var transpose = (arguments.length > 1) ? !!arguments[1] : false;\n      gl[fname+'v']( location, transpose, arguments[0] );\n    }\n    return location;\n  };\n}\n\n/*\n * setter factory for sampler uniforms\n */\nfunction getSamplerSetFunction( type, location, gl, context ){\n  var unit = context.texIndex++;\n  return function(){\n    if( arguments.length === 1 ) {\n      if( arguments[0].bind !== undefined ){ // is texture\n        arguments[0].bind( unit );\n        gl.uniform1i( location, unit );\n      } else {\n        gl.uniform1i( location, arguments[0] );\n      }\n    }\n    return location;\n  };\n}\n\n\n/*\n * setter factory for uniform buffers\n * can be \n *   f( buffer ) \n *     buffer is bound to auto increment binding point unit and block binding reset to this point\n *   f( unit )\n *     only set the block binding point to given unit\n */\nfunction getUniformBufferSetFunction( index, gl, context ){\n  var unit = context.ublockIndex++;\n  return function(){\n    if( arguments.length === 1 ) {\n      if( arguments[0] instanceof WebGLBuffer ){ // is buffer\n        gl.uniformBlockBinding(this.program, index, unit);\n        gl.bindBufferBase(gl.UNIFORM_BUFFER, unit, arguments[0] );\n      } else {\n        gl.uniformBlockBinding(this.program, index, arguments[0]);\n      }\n    }\n    return index;\n  };\n}\n\n/*\n * getter factory for attributes\n */\nfunction getAttribAccess( attrib ){\n  return function(){\n    return attrib;\n  };\n}\n\n\n\nmodule.exports = Program;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanogl/program.js\n// module id = 7\n// module chunks = 0","var BufferUtils = require( './bufferutils' );\n\n/*\n * GL_ARRAY_BUFFER */\nvar TGT = 0x8892;\n\n\n\n/**\n * @class\n * @implements {Drawable}\n * @param {WebGLRenderingContext} gl      then webgl context this ArrayBuffer belongs to\n * @param {TypedArray|uint} [data]   optional data to copy to buffer, or the size (in bytes)\n * @param {GLenum} [usage=GL_STATIC_DRAW] the usage hint for this buffer.\n *\n */\nfunction ArrayBuffer( gl, data, usage ){\n  this.gl         = gl;\n  this.usage      = usage || gl.STATIC_DRAW;\n  this.buffer     = gl.createBuffer();\n  this.attribs    = [];\n  this.stride     = 0;\n  this.byteLength = 0;\n  this.length     = 0;\n\n  if( data ){\n    this.data( data );\n  }\n}\n\n\nArrayBuffer.prototype = {\n\n  /**\n   * Bind the underlying webgl buffer.\n   */\n  bind: function(){\n    this.gl.bindBuffer( TGT, this.buffer );\n  },\n\n  /**\n   * Add attribute declaration for this buffer. Once attributes declared, the buffer can be linked to\n   * programs attributes using {@link ArrayBuffer#attribPointer}\n   *  @param {string} name the name of the program's attribute\n   *  @param {uint} size the size of the attribute (3 for a vec3)\n   *  @param {GLenum} type the type of data (GL_FLOAT, GL_SHORT etc)\n   *  @param {boolean} [normalize=false] indicate if the data must be normalized\n   */\n  attrib: function( name, size, type, normalize ){\n    this.attribs.push({\n      name      : name       ,\n      type      : 0|type     ,\n      size      : 0|size     ,\n      normalize : !!normalize,\n      offset    : this.stride\n    });\n    this.stride += BufferUtils.getComponentSize( type ) * size;\n    this._computeLength();\n    return this;\n  },\n\n  /**\n   * Fill webgl buffer with the given data. You can also pass a uint  to allocate the buffer to the given size.\n   *   @param {TypedArray|uint} array the data to send to the buffer, or a size.\n   */\n  data: function( array ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n    gl.bufferData( TGT, array, this.usage );\n    gl.bindBuffer( TGT, null );\n\n    this.byteLength = ( array.byteLength === undefined ) ? array : array.byteLength;\n    this._computeLength();\n  },\n\n  /**\n   * Set a part of the buffer with the given data, starting a offset (in bytes)\n   *  @param {typedArray} array the data to send to buffer\n   *  @param {uint} offset the offset in byte where the data will be written\n   */\n  subData: function( array, offset ){\n    var gl = this.gl;\n    gl.bindBuffer(    TGT, this.buffer );\n    gl.bufferSubData( TGT, offset, array );\n    gl.bindBuffer(    TGT, null );\n  },\n\n  /**\n   * Link given program attributes to this buffer. You should first declare attributes using {@link ArrayBuffer#attrib}\n   * before calling this method.\n   *   @param {Program} program the nanogl Program\n   */\n  attribPointer: function( program ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n\n    for (var i = 0; i < this.attribs.length; i++) {\n      var attrib = this.attribs[i];\n\n      if( program[attrib.name] !== undefined ){\n        var aLocation = program[attrib.name]();\n        gl.enableVertexAttribArray( aLocation );\n        gl.vertexAttribPointer( aLocation,\n                                attrib.size,\n                                attrib.type,\n                                attrib.normalize,\n                                this.stride,\n                                attrib.offset\n                              );\n      }\n\n    }\n  },\n\n  /**\n   * Shortcut to gl.drawArrays\n   *   @param {GLenum} mode the type of primitive to draw (GL_TRIANGLE, GL_POINTS etc)\n   *   @param {uint} [count] the number of vertices to draw (full buffer is used if omited)\n   *   @param {uint} [offset=0] the position of the first vertex to draw\n   */\n  draw: function( mode, count, offset ){\n    count  = ( count === undefined  ) ? this.length : count;\n    this.gl.drawArrays( mode, offset, 0|count );\n  },\n\n  /**\n   * Delete underlying webgl objects\n   */\n  dispose: function(){\n    this.gl.deleteBuffer( this.buffer );\n    this.buffer = null;\n    this.gl = null;\n  },\n\n\n  _computeLength: function(){\n    if( this.stride > 0 ) {\n      this.length = this.byteLength / this.stride;\n    }\n  }\n\n};\n\n/*\n * Implement Drawable\n */\nBufferUtils.Drawable( ArrayBuffer.prototype );\n\n\nmodule.exports = ArrayBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanogl/arraybuffer.js\n// module id = 8\n// module chunks = 0","var BufferUtils = require( './bufferutils' );\n\n/* GL_ELEMENT_ARRAY_BUFFER */\nvar TGT = 0x8893;\n\n/**\n * @class\n * @implements {Drawable}\n * @param {WebGLRenderingContext} gl      then webgl context this ArrayBuffer belongs to\n * @param {GLenum} [type=GL_UNSIGNED_SHORT]  the inetger type of the indices (GL_UNSIGNED_BYTE, GL_UNSIGNED_INT etc)\n * @param {TypedArray|uint} [data]   optional data to copy to buffer, or the size (in bytes)\n * @param {GLenum} [usage=GL_STATIC_DRAW] the usage hint for this buffer.\n *\n */\nfunction IndexBuffer( gl, type, data, usage ){\n  this.gl       = gl;\n  this.buffer   = gl.createBuffer();\n  this.usage    = usage || gl.STATIC_DRAW;\n  this.type     = 0;\n  this.typeSize = 0;\n  this.size     = 0;\n\n  this.setType( type || gl.UNSIGNED_SHORT );\n\n  if( data ){\n    this.data( data );\n  }\n}\n\n\nIndexBuffer.prototype = {\n\n\n  /**\n   * Bind the underlying webgl buffer.\n   */\n  bind: function(){\n    this.gl.bindBuffer( TGT, this.buffer );\n  },\n\n  /**\n   *  Change the type of internal type of the IndexBuffer\n   *  @param {GLenum} type  the integer type of the indices (GL_UNSIGNED_BYTE, GL_UNSIGNED_INT etc)\n   */\n  setType: function( type ){\n    this.type = type;\n    this.typeSize = BufferUtils.getComponentSize( type );\n  },\n\n  /**\n   * Fill webgl buffer with the given data. You can also pass a uint  to allocate the buffer to the given size.\n   *   @param {TypedArray|uint} array the data to send to the buffer, or a size.\n   */\n  data: function( array ){\n    var gl = this.gl;\n    gl.bindBuffer( TGT, this.buffer );\n    gl.bufferData( TGT, array, this.usage );\n    gl.bindBuffer( TGT, null );\n    this.size = ( array.byteLength === undefined ) ? array : array.byteLength;\n  },\n\n  /**\n   * Set a part of the buffer with the given data, starting a offset (in bytes)\n   *  @param {typedArray} array the data to send to buffer\n   *  @param {uint} offset the offset in byte where the data will be written\n   */\n  subData: function( array, offset ){\n    var gl = this.gl;\n    gl.bindBuffer(    TGT, this.buffer );\n    gl.bufferSubData( TGT, offset, array );\n    gl.bindBuffer(    TGT, null );\n  },\n\n\n  /**\n   * Delete underlying webgl objects\n   */\n  dispose: function(){\n    this.gl.deleteBuffer( this.buffer );\n    this.buffer = null;\n    this.gl = null;\n  },\n\n  /**\n   * Shortcut to gl.drawArrays\n   *   @param {GLenum} mode the type of primitive to draw (GL_TRIANGLE, GL_POINTS etc)\n   *   @param {uint} [count] the number of indices to draw (full buffer is used if omited)\n   *   @param {uint} [offset=0] the position of the first index to draw\n   */\n  draw: function( mode, count, offset ){\n    count  = ( count === undefined  ) ? this.size/this.typeSize : count;\n    this.gl.drawElements( mode, count, this.type, 0|offset );\n  }\n\n\n};\n\n\n/*\n * Implement Drawable\n */\nBufferUtils.Drawable( IndexBuffer.prototype );\n\n\nmodule.exports = IndexBuffer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanogl/indexbuffer.js\n// module id = 9\n// module chunks = 0","var _UID = 0;\nvar T2D = 0x0DE1;\n\n/*\n * compute filtering enum, return one of the following :\n *  NEAREST\n *  LINEAR\n *  NEAREST_MIPMAP_NEAREST\n *  LINEAR_MIPMAP_NEAREST\n *  NEAREST_MIPMAP_LINEAR\n *  LINEAR_MIPMAP_LINEAR\n */\nfunction getFilter( smooth, mipmap, miplinear ){\n  return 0x2600 | (+smooth) | (+mipmap<<8) | ( +( mipmap && miplinear )<<1 );\n}\n\n\n/**\n * @class\n * @classdesc Texture class manage TEXTURE_2D types textures\n *\n *  @param {WebGLRenderingContext} gl webgl context the texture belongs to\n *  @param {GLenum} [format  =GL_RGB] the pixel format, default to gl.RGB (can be gl.RGB, gl.RGBA, gl.LUMINANCE...)\n *  @param {GLenum} [type    =GL_UNSIGNED_BYTE] the pixel data type, default to gl.UNSIGNED_BYTE\n *  @param {GLenum} [internal=format] the pixel internal format, default to the same value than 'format' parameter (which must be in webgl 1)\n */\nfunction Texture( gl, format, type, internal ){\n  this._uid = _UID++;\n  this.gl = gl;\n  this.id = gl.createTexture();\n  this.width  = 0;\n  this.height = 0;\n\n  this.setFormat( format, type, internal );\n\n  gl.bindTexture( T2D, this.id );\n  this.setFilter( true );\n\n}\n\n\nTexture.prototype = {\n\n  /**\n   * define underlying format, internal format and data type of texture\n   *  @param {GLenum} [format  =GL_RGB] the pixel format, default to gl.RGB (can be gl.RGB, gl.RGBA, gl.LUMINANCE...)\n   *  @param {GLenum} [type    =GL_UNSIGNED_BYTE] the pixel data type, default to gl.UNSIGNED_BYTE\n   *  @param {GLenum} [internal=format] the pixel internal format, default to the same value than 'format' parameter (which must be in webgl 1)\n   */\n  setFormat : function( format, type, internal ){\n    this.format   = format   || this.gl.RGB;\n    this.internal = internal || this.format;\n    this.type     = type     || this.gl.UNSIGNED_BYTE;\n  },\n\n  /**\n   * set texture data from html source\n   *   @param {TexImageSource} img the source. Can be ImageBitmap, ImageData, HTMLImageElement, HTMLCanvasElement, HTMLVideoElement\n   */\n  fromImage : function( img ){\n    var gl = this.gl;\n\n    this.width  = img.width;\n    this.height = img.height;\n\n    gl.bindTexture( T2D, this.id );\n    gl.texImage2D(  T2D, 0, this.internal, this.format, this.type, img );\n  },\n\n  /**\n   * Allocate texture to the given size, with optional data (TypedArray) and data type\n   *  @param {number} width     the new texture's width\n   *  @param {number} height    the new texture's height\n   *  @param {TypedArray} [data=null]  TypedArray of texture data, can be null\n   *  @param {GLenum} [dataType=GL_UNSIGNED_BYTE] can be gl.UNSIGNED_BYTE, gl.FLOAT, half.HALF_FLOAT_OES etc depending on available extensions\n   */\n  fromData : function( width, height, data ){\n    var gl = this.gl;\n\n    this.width  = width;\n    this.height = height;\n\n    data = data || null;\n\n    gl.bindTexture( T2D, this.id );\n    gl.texImage2D( T2D, 0, this.internal, width, height, 0, this.format, this.type, data );\n  },\n\n  /**\n   * Bind the texture\n   *   @param {uint} [unit=undefined] optional texture unit to make active before binding\n   */\n  bind : function( unit ){\n    var gl = this.gl;\n    if( unit !== undefined ){\n      gl.activeTexture( gl.TEXTURE0 + (0|unit) );\n    }\n    gl.bindTexture( T2D, this.id );\n  },\n\n  /**\n   * delete the webgl texture\n   *\n   */\n  dispose : function( ){\n    this.gl.deleteTexture( this.id );\n    this.id = null;\n    this.gl = null;\n  },\n\n  /**\n   * Change the filtering parameters\n   *   @param {boolean} [smooth=false]    if true, use LINEAR filtering\n   *   @param {boolean} [mipmap=false]    if true, enable mipmaping\n   *   @param {boolean} [miplinear=false] if true, use linear Mipmapping\n   */\n  setFilter : function( smooth, mipmap, miplinear ){\n    var gl = this.gl;\n    var filter = getFilter( !!smooth, !!mipmap, !!miplinear);\n    gl.texParameteri( T2D, gl.TEXTURE_MAG_FILTER, getFilter( !!smooth, false, false ) );\n    gl.texParameteri( T2D, gl.TEXTURE_MIN_FILTER, filter );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.REPEAT\n   */\n  repeat : function( ){\n    this.wrap( this.gl.REPEAT );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.CLAMP_TO_EDGE\n   */\n  clamp : function( ){\n    this.wrap( this.gl.CLAMP_TO_EDGE );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to gl.MIRRORED_REPEAT\n   */\n  mirror : function( ){\n    this.wrap( this.gl.MIRRORED_REPEAT );\n  },\n\n  /**\n   * Set both WRAP_S and WRAP_T property to the given value\n   *  @param {GLenum} wrap the wrap enum\n   */\n  wrap : function( wrap ) {\n    var gl = this.gl;\n    gl.texParameteri( T2D, gl.TEXTURE_WRAP_S, wrap );\n    gl.texParameteri( T2D, gl.TEXTURE_WRAP_T, wrap );\n  }\n\n};\n\nmodule.exports = Texture;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nanogl/texture.js\n// module id = 10\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n    \n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    \n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    \n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      \n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n      \n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n        \n  return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nmodule.exports = mat4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/mat4.js\n// module id = 11\n// module chunks = 0","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nmodule.exports = glMatrix;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/gl-matrix/src/gl-matrix/common.js\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}